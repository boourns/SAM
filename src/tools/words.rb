require 'json'

banks = [
  [
    "hello",
    "electronic",
    "carrot",
    "chip",
    "dont",
    "fall",
    "go",
    "to",
    "bed"
  ]
]

phoneme_cache = "phoneme_cache.json"
phoneme_length_cache = "phoneme_length_cache.json"

def load(filename)
  File.exist?(filename) ? JSON.parse(File.read(filename)) : {}
end

def save(filename, data)
  File.write(filename, data.to_json)
end

def generate_phoneme_list(word)
  return [36,7,19,52,20,0]
end

def generate_phoneme_length_list(word)
  return [2,8,9,14,8,0]
end

phoneme_list = load(phoneme_cache)
phoneme_length_list = load(phoneme_length_cache)

# build cache
banks.each_with_index do |words, bank_number|
  words.each do |word, word_number|
    if phoneme_list[word].nil?
      phoneme_list[word] = generate_phoneme_list(word)
    end

    if phoneme_length_list[word].nil?
      phoneme_length_list[word] = generate_phoneme_length_list(word)
    end
  end
end

save(phoneme_cache, phoneme_list)
save(phoneme_length_cache, phoneme_length_list)

# generate data blob + indices
File.open("wordlist.cc", 'w') do |file|
  file.write('''
  // This file is autogenerated by running `ruby ./words/words.rb`

  unsigned char data[] = {
  ''')

  # output data
  banks.each_with_index do |words, bank_number|
    words.each do |word, word_number|
      file.write(phoneme_list[word].join(", "))
      file.write(', ')
      file.write(phoneme_length_list[word].join(", "))
      file.write(', ')
      file.write "// #{word}\n"
    end
  end
  file.write("};\n\n")

  file.write("unsigned char wordlen[#{banks.count}][#{banks[0].count}] = {\n")
  banks.each_with_index do |bank, bank_number|
    file.write("{")
    file.write(bank.map { |word| phoneme_list[word].count }.join(', '))
    file.write("},\n")
  end

  file.write("};\n")
end
