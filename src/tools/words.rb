require 'json'
require 'byebug'

banks = [
  [
    "hello",
    "electronic",
    "robot",
    "yeah",
    "harder",
    "faster",
    "better",
    "stronger",
    "techno",
    "punk music",
    "hacker",
    "bass",
    "drums",
    "baby",
    "girl",
    "swag"
  ]
]

phoneme_cache = "phonemes.json"

def load(filename)
  File.exist?(filename) ? JSON.parse(File.read(filename)) : {}
end

def save(filename, data)
  File.write(filename, data.to_json)
end

def generate_phoneme(word)
  return JSON.parse(`./parser #{word}`)
end

phonemes = load(phoneme_cache)

# build cache
banks.each_with_index do |words, bank_number|
  words.each do |word, word_number|
    if phonemes[word].nil?
      phonemes[word] = generate_phoneme(word)
    end
  end
end

save(phoneme_cache, phonemes)
wordpos = {}
validOffsetPos = {}

index = 0

# generate data blob + indices
File.open("./src/wordlist.cc", 'w') do |file|
  file.write('''#include "wordlist.h"
// This file is autogenerated by running `ruby ./words/words.rb`

const unsigned char data[] = {
''')

  # output data
  banks.each_with_index do |words, bank_number|
    words.each do |word, word_number|
      wordpos[word] = index
      %w(frequency1 frequency2 frequency3 pitches amplitude1 amplitude2 amplitude3 sampledConsonantFlag).each do |table|
        if phonemes[word][table] == nil
          debugger
        end
        file.write(phonemes[word][table].join(", "))
        file.write(', ')
        index += phonemes[word][table].count
      end
      file.write "// #{word}\n"
    end
  end
  file.write("};\n\n")

  file.write("const unsigned short wordlen[#{banks.count}][#{banks[0].count}] = {\n")
  banks.each_with_index do |bank, bank_number|
    file.write("{")
    file.write(bank.map { |word| phonemes[word]['frequency1'].count }.join(', '))
    file.write("},\n")
  end
  file.write("};\n")

  file.write("const unsigned int wordpos[#{banks.count}][#{banks[0].count}] = {\n")
  banks.each_with_index do |bank, bank_number|
    file.write("{")
    file.write(bank.map { |word| wordpos[word] }.join(', '))
    file.write("},\n")
  end
  file.write("};\n")

  # output data
  index = 0
  file.write('const unsigned char validOffset[] = {')

  banks.each_with_index do |words, bank_number|
    words.each do |word, word_number|
      validOffsetPos[word] = index
      file.write(phonemes[word]['validOffset'].join(", "))
      file.write(', ')
      index += phonemes[word]['validOffset'].count
      file.write "// #{word}\n"
    end
  end
  file.write("};\n\n")

  file.write("const unsigned char validOffsetLen[#{banks.count}][#{banks[0].count}] = {\n")
  banks.each_with_index do |bank, bank_number|
    file.write("{")
    file.write(bank.map { |word| phonemes[word]['validOffset'].count }.join(', '))
    file.write("},\n")
  end
  file.write("};\n")

  file.write("const unsigned short validOffsetPos[#{banks.count}][#{banks[0].count}] = {\n")
  banks.each_with_index do |bank, bank_number|
    file.write("{")
    file.write(bank.map { |word| validOffsetPos[word] }.join(', '))
    file.write("},\n")
  end
  file.write("};\n")
end

# generate data blob + indices
File.open("./src/wordlist.h", 'w') do |file|
  file.write("""
#ifndef __WORDLIST_H__
#define __WORDLIST_H__

// This file is autogenerated by running `ruby ./words/words.rb`

extern const unsigned char data[];
extern const unsigned short wordlen[#{banks.count}][#{banks[0].count}];
extern const unsigned int wordpos[#{banks.count}][#{banks[0].count}];

extern const unsigned char validOffset[];
extern const unsigned short validOffsetLen[#{banks.count}][#{banks[0].count}];
extern const unsigned int validOffsetPos[#{banks.count}][#{banks[0].count}];

#define NUM_BANKS #{banks.count}
#define NUM_WORDS #{banks[0].count}

#endif
""")
end
